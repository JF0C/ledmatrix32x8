float smile[8][8] = {{.0, .0, .5, .9, .9, .5, .0, .0},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.5, .0, .9, .0, .9, .0, .0, .5},
                     {.9, .0, .0, .0, .0, .9, .0, .9},
                     {.9, .0, .0, .0, .0, .9, .0, .9},
                     {.5, .0, .9, .0, .9, .0, .0, .5},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.0, .0, .5, .9, .9, .5, .0, .0}};
                     
float laugh[8][8] = {{.0, .0, .5, .9, .9, .5, .0, .0},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.5, .9, .9, .0, .9, .0, .0, .5},
                     {.9, .0, .0, .0, .9, .9, .0, .9},
                     {.9, .0, .0, .0, .9, .9, .0, .9},
                     {.5, .9, .9, .0, .9, .0, .0, .5},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.0, .0, .5, .9, .9, .5, .0, .0}};

float puke[8][8] = {{.0, .0, .0, .0, .0, .0, .0, .9},
                    {.0, .0, .0, .0, .0, .0, .0, .9},
                    {.0, .0, .0, .0, .0, .4, .9, .9},
                    {.0, .0, .0, .0, .9, .9, .9, .9},
                    {.0, .0, .0, .0, .9, .9, .9, .9},
                    {.0, .0, .0, .0, .0, .4, .9, .9},
                    {.0, .0, .0, .0, .0, .0, .0, .9},
                    {.0, .0, .0, .0, .0, .9, .0, .9}};
                     
float frown[8][8] = {{.0, .0, .5, .9, .9, .5, .0, .0},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.5, .0, .9, .0, .0, .9, .0, .5},
                     {.9, .0, .0, .0, .9, .0, .0, .9},
                     {.9, .0, .0, .0, .9, .0, .0, .9},
                     {.5, .0, .9, .0, .0, .9, .0, .5},
                     {.0, .7, .0, .0, .0, .0, .7, .0},
                     {.0, .0, .5, .9, .9, .5, .0, .0}};

float thumb[8][8] = {{.0, .0, .0, .0, .9, .9, .9, .0},
                     {.0, .0, .0, .0, .9, .9, .9, .0},
                     {.0, .0, .0, .9, .9, .9, .9, .9},
                     {.0, .0, .5, .9, .9, .9, .9, .9},
                     {.9, .9, .9, .9, .9, .9, .9, .9},
                     {.5, .9, .9, .9, .9, .9, .9, .9},
                     {.0, .0, .0, .9, .4, .9, .4, .9},
                     {.0, .0, .0, .9, .2, .9, .2, .9}};


float finger[8][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                      {.0, .0, .0, .2, .4, .9, .9, .0},
                      {.2, .5, .5, .9, .9, .9, .9, .9},
                      {.9, .9, .9, .9, .9, .9, .9, .9},
                      {.0, .0, .0, .2, .4, .9, .9, .9},
                      {.0, .0, .0, .9, .9, .9, .9, .9},
                      {.0, .0, .0, .0, .8, .5, .0, .0},
                      {.0, .0, .0, .0, .0, .0, .0, .0}};

float pill[8][8] = {{.3, .9, .9, .0, .0, .0, .0, .0},
                    {.9, .0, .0, .9, .0, .0, .0, .0},
                    {.9, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .9, .0, .5, .9, .9, .0, .0},
                    {.0, .0, .9, .9, .9, .9, .9, .0},
                    {.0, .0, .0, .9, .9, .5, .9, .0},
                    {.0, .0, .0, .0, .9, .9, .3, .0},
                    {.0, .0, .0, .0, .0, .0, .0, .0}};

float moonl[8][8] = {{.0, .0, .5, .0, .0, .5, .0, .0},
                     {.0, .5, .0, .0, .0, .0, .5, .0},
                     {.3, .9, .0, .0, .0, .0, .9, .3},
                     {.5, .9, .0, .0, .0, .0, .9, .5},
                     {.5, .9, .9, .0, .0, .9, .9, .5},
                     {.3, .9, .9, .9, .9, .9, .9, .3},
                     {.0, .9, .9, .9, .9, .9, .9, .0},
                     {.0, .0, .3, .9, .9, .3, .0, .0}};

float moonr[8][8] = {{.0, .0, .3, .9, .9, .3, .0, .0},
                     {.0, .9, .9, .9, .9, .9, .9, .0},
                     {.3, .9, .9, .9, .9, .9, .9, .3},
                     {.5, .9, .9, .0, .0, .9, .9, .5},
                     {.5, .9, .0, .0, .0, .0, .9, .5},
                     {.3, .9, .0, .0, .0, .0, .9, .3},
                     {.0, .5, .0, .0, .0, .0, .5, .0},
                     {.0, .0, .5, .0, .0, .5, .0, .0}};

float right[8][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                     {.0, .0, .0, .0, .9, .0, .0, .0},
                     {.0, .0, .0, .0, .9, .0, .0, .0},
                     {.0, .0, .0, .0, .9, .0, .0, .0},
                     {.0, .9, .0, .0, .9, .0, .0, .9},
                     {.0, .0, .9, .0, .9, .0, .9, .0},
                     {.0, .0, .0, .9, .9, .9, .0, .0},
                     {.0, .0, .0, .0, .9, .0, .0, .0}};
                     
float left[8][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .9, .9, .9, .0, .0},
                    {.0, .0, .9, .0, .9, .0, .9, .0},
                    {.0, .9, .0, .0, .9, .0, .0, .9},
                    {.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .0, .9, .0, .0, .0}};

float up[8][8] = {{.0, .0, .0, .9, .0, .0, .0, .0},
                  {.0, .0, .9, .0, .0, .0, .0, .0},
                  {.0, .9, .0, .0, .0, .0, .0, .0},
                  {.9, .9, .9, .9, .9, .9, .9, .9},
                  {.0, .9, .0, .0, .0, .0, .0, .0},
                  {.0, .0, .9, .0, .0, .0, .0, .0},
                  {.0, .0, .0, .9, .0, .0, .0, .0},
                  {.0, .0, .0, .0, .0, .0, .0, .0}};

float down[8][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .0, .0, .9, .0, .0},
                    {.0, .0, .0, .0, .0, .0, .9, .0},
                    {.9, .9, .9, .9, .9, .9, .9, .9},
                    {.0, .0, .0, .0, .0, .0, .9, .0},
                    {.0, .0, .0, .0, .0, .9, .0, .0},
                    {.0, .0, .0, .0, .9, .0, .0, .0},
                    {.0, .0, .0, .0, .0, .0, .0, .0}};

float heart[8][8] = {{.0, .1, .8, .5, .0, .0, .0, .0},
                     {.2, .9, .9, .9, .5, .1, .0, .0},
                     {.5, .9, .9, .9, .9, .5, .2, .0},
                     {.0, .7, .9, .9, .9, .9, .7, .2},
                     {.0, .7, .9, .9, .9, .9, .7, .2},
                     {.5, .9, .9, .9, .9, .5, .2, .0},
                     {.2, .9, .9, .9, .5, .1, .0, .0},
                     {.0, .1, .8, .5, .0, .0, .0, .0}};

float tums1[5][8] = {{.0, .0, .0, .9, .0, .0, .0, .0},
                     {.0, .0, .0, .9, .9, .9, .9, .0},
                     {.0, .0, .0, .9, .0, .0, .0, .0},
                     {.0, .0, .0, .9, .9, .9, .9, .0},
                     {.0, .0, .0, .0, .0, .0, .9, .0}};
float tums2[5][8] = {{.0, .0, .0, .9, .9, .9, .9, .0},
                     {.0, .0, .0, .9, .0, .0, .0, .0},
                     {.0, .0, .0, .9, .9, .9, .9, .0},
                     {.0, .0, .0, .9, .0, .0, .0, .0},
                     {.0, .0, .0, .9, .9, .9, .9, .0}};

float tum1[5][8] = {{.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0}};

float tum2[5][8] = {{.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .0, .0, .0, .0, .9, .9, .0},
                    {.0, .0, .0, .0, .0, .9, .9, .0}};

float tum3[5][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0}};

float tum4[5][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .0, .0, .0, .0, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .9, .9, .9, .9, .9, .9, .0}};

float RICH[8][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                    {.0, .0, .0, .9, .0, .0, .0, .0},
                    {.0, .0, .0, .9, .0, .0, .0, .0},
                    {.9, .9, .9, .9, .9, .9, .9, .9},
                    {.0, .9, .0, .9, .9, .0, .0, .0},
                    {.0, .9, .0, .9, .0, .9, .0, .0},
                    {.0, .0, .9, .0, .0, .0, .9, .0},
                    {.0, .0, .0, .0, .0, .0, .0, .0}};

float letter_space[2][8] = {{.0, .0, .0, .0, .0, .0, .0, .0},
                            {.0, .0, .0, .0, .0, .0, .0, .0}};

float letter_A[5][8] = {{.0, .0, .0, .0, .4, .6, .9, .0},
                        {.0, .0, .4, .6, .9, .4, .0, .0},
                        {.0, .9, .2, .0, .9, .0, .0, .0},
                        {.0, .0, .4, .6, .9, .4, .0, .0},
                        {.0, .0, .0, .0, .4, .6, .9, .0}};

float letter_AE[5][8] = {{.9, .0, .0, .0, .4, .6, .9, .0},
                         {.0, .0, .4, .6, .9, .4, .0, .0},
                         {.0, .9, .2, .0, .9, .0, .0, .0},
                         {.0, .0, .4, .6, .9, .4, .0, .0},
                         {.9, .0, .0, .0, .4, .6, .9, .0}};

float letter_B[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .9, .0, .9, .9, .0, .0}};

float letter_C[4][8] = {{.0, .0, .5, .9, .9, .5, .0, .0},
                        {.0, .5, .9, .0, .0, .9, .5, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0}};

float letter_D[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .9, .9, .9, .9, .0, .0}};

float letter_E[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0}};

float letter_F[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .0, .0},
                        {.0, .9, .0, .9, .0, .0, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .0, .0}};

float letter_G[4][8] = {{.0, .0, .5, .9, .9, .5, .0, .0},
                        {.0, .5, .9, .0, .0, .9, .5, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .9, .0, .0, .9, .9, .9, .0}};

float letter_H[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0}};

float letter_I[3][8] = {{.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0}};

float letter_J[4][8] = {{.0, .9, .0, .0, .0, .9, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .9, .9, .9, .9, .0, .0}};

float letter_K[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .9, .0, .8, .7, .0, .0},
                        {.0, .9, .0, .0, .0, .3, .9, .0}};

float letter_L[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0}};

float letter_M[5][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0}};

float letter_N[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .9, .7, .2, .0, .0, .0},
                        {.0, .0, .0, .2, .7, .9, .0, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0}};

float letter_O[4][8] = {{.0, .0, .9, .9, .9, .9, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .9, .9, .9, .9, .0, .0}};

float letter_OE[4][8] = {{.9, .0, .9, .9, .9, .9, .0, .0},
                         {.0, .9, .0, .0, .0, .0, .9, .0},
                         {.0, .9, .0, .0, .0, .0, .9, .0},
                         {.9, .0, .9, .9, .9, .9, .0, .0}};

float letter_P[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .0, .0},
                        {.0, .9, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0}};

float letter_Q[4][8] = {{.0, .0, .9, .9, .9, .9, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .9, .9, .9, .0},
                        {.0, .0, .9, .9, .9, .9, .9, .0}};

float letter_R[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .9, .9, .0, .0, .0},
                        {.0, .9, .0, .9, .0, .9, .0, .0},
                        {.0, .0, .9, .0, .0, .0, .9, .0}};

float letter_S[4][8] = {{.0, .0, .9, .0, .0, .9, .0, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .0, .9, .0, .0, .9, .0, .0}};

float letter_T[5][8] = {{.0, .9, .0, .0, .0, .0, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .0, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .0, .0}};

float letter_U[4][8] = {{.0, .9, .9, .9, .9, .9, .0, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .9, .9, .9, .9, .0, .0}};

float letter_UE[4][8] = {{.9, .0, .9, .9, .9, .9, .0, .0},
                         {.0, .0, .0, .0, .0, .0, .9, .0},
                         {.0, .0, .0, .0, .0, .0, .9, .0},
                         {.9, .0, .9, .9, .9, .9, .0, .0}};

float letter_V[5][8] = {{.0, .9, .7, .5, .2, .0, .0, .0},
                        {.0, .0, .2, .5, .9, .5, .0, .0},
                        {.0, .0, .0, .0, .0, .2, .9, .0},
                        {.0, .0, .2, .5, .9, .5, .0, .0},
                        {.0, .9, .7, .5, .2, .0, .0, .0}};

float letter_W[5][8] = {{.0, .9, .9, .7, .5, .2, .0, .0},
                        {.0, .0, .0, .1, .3, .9, .9, .0},
                        {.0, .0, .0, .0, .9, .2, .0, .0},
                        {.0, .0, .0, .1, .3, .9, .9, .0},
                        {.0, .9, .9, .7, .5, .2, .0, .0}};

float letter_X[5][8] = {{.0, .9, .0, .0, .0, .5, .9, .0},
                        {.0, .0, .9, .0, .9, .7, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .9, .0, .9, .7, .0, .0},
                        {.0, .9, .0, .0, .0, .5, .9, .0}};

float letter_Y[5][8] = {{.0, .9, .0, .0, .0, .0, .0, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0},
                        {.0, .0, .0, .9, .9, .9, .9, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .0, .0}};

float letter_Z[5][8] = {{.0, .9, .0, .0, .0, .9, .9, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .9, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0}};

float letter_a[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .9, .9, .9, .0}};

float letter_ae[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                         {.0, .9, .0, .9, .0, .0, .9, .0},
                         {.0, .0, .0, .9, .0, .0, .9, .0},
                         {.0, .9, .0, .9, .9, .9, .9, .0}};

float letter_b[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .9, .9, .0, .0}};

float letter_c[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0}};

float letter_d[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0}};

float letter_e[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .9, .0, .9, .0},
                        {.0, .0, .0, .9, .9, .0, .9, .0},
                        {.0, .0, .0, .0, .9, .0, .9, .0}};

float letter_f[3][8] = {{.0, .0, .9, .9, .9, .9, .9, .0},
                        {.0, .9, .0, .0, .9, .0, .0, .0},
                        {.0, .0, .9, .0, .0, .0, .0, .0}};

float letter_g[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .9},
                        {.0, .0, .0, .9, .0, .9, .0, .9},
                        {.0, .0, .0, .0, .9, .9, .9, .0}};

float letter_h[4][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .0, .9, .9, .9, .0}};

float letter_i[1][8] = {{.0, .0, .9, .0, .9, .9, .9, .0}};

float letter_j[3][8] = {{.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .0, .9},
                        {.0, .0, .9, .0, .9, .9, .9, .0}};

float letter_k[3][8] = {{.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .0, .9, .0, .0, .0},
                        {.0, .0, .0, .9, .0, .9, .9, .0}};

float letter_l[3][8] = {{.0, .9, .9, .9, .9, .9, .0, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .0, .9, .0, .0}};

float letter_m[5][8] = {{.0, .0, .0, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .0, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .0, .9, .9, .9, .0}};

float letter_n[3][8] = {{.0, .0, .0, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .0, .9, .9, .9, .0}};

float letter_o[3][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .9, .9, .0, .0}};

float letter_oe[3][8] = {{.0, .9, .0, .0, .9, .9, .0, .0},
                         {.0, .0, .0, .9, .0, .0, .9, .0},
                         {.0, .9, .0, .0, .9, .9, .0, .0}};

float letter_p[3][8] = {{.0, .0, .0, .9, .9, .9, .9, .9},
                        {.0, .0, .0, .9, .0, .9, .0, .0},
                        {.0, .0, .0, .0, .9, .0, .0, .0}};

float letter_q[3][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                        {.0, .0, .0, .9, .0, .9, .0, .0},
                        {.0, .0, .0, .9, .9, .9, .9, .9}};

float letter_r[3][8] = {{.0, .0, .0, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .0, .0, .0, .9, .0, .0, .0}};

float letter_s[4][8] = {{.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .0, .9, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .0, .0, .0}};

float letter_t[3][8] = {{.0, .0, .0, .9, .0, .0, .0, .0},
                        {.0, .9, .9, .9, .9, .9, .6, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0}};

float letter_u[3][8] = {{.0, .0, .0, .9, .9, .9, .0, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .9, .9, .9, .0}};

float letter_ue[3][8] = {{.0, .9, .0, .9, .9, .9, .0, .0},
                         {.0, .0, .0, .0, .0, .0, .9, .0},
                         {.0, .9, .0, .9, .9, .9, .9, .0}};
                        
float letter_v[3][8] = {{.0, .0, .0, .9, .9, .5, .0, .0},
                        {.0, .0, .0, .0, .0, .9, .9, .0},
                        {.0, .0, .0, .9, .9, .5, .0, .0}};

float letter_w[5][8] = {{.0, .0, .0, .9, .9, .0, .0, .0},
                        {.0, .0, .0, .0, .0, .5, .9, .0},
                        {.0, .0, .0, .0, .9, .2, .0, .0},
                        {.0, .0, .0, .0, .0, .5, .9, .0},
                        {.0, .0, .0, .9, .9, .0, .0, .0}};

float letter_x[3][8] = {{.0, .0, .0, .9, .0, .3, .9, .0},
                        {.0, .0, .0, .0, .9, .7, .0, .0},
                        {.0, .0, .0, .9, .0, .3, .9, .0}};

float letter_y[3][8] = {{.0, .0, .0, .9, .0, .0, .0, .9},
                        {.0, .0, .0, .0, .9, .0, .9, .0},
                        {.0, .0, .0, .9, .9, .9, .0, .0}};

float letter_z[4][8] = {{.0, .0, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .9, .9, .0},
                        {.0, .0, .0, .9, .9, .0, .9, .0},
                        {.0, .0, .0, .9, .0, .0, .9, .0}};

float letter_qm[4][8] = {{.0, .0, .9, .0, .0, .0, .0, .0},
                         {.0, .9, .0, .0, .0, .0, .0, .0},
                         {.0, .9, .0, .9, .9, .0, .9, .0},
                         {.0, .0, .9, .9, .0, .0, .0, .0}};

float letter_dc[1][8] = {{.0, .0, .9, .0, .0, .9, .0, .0}};
float letter_dot[1][8] = {{.0, .0, .0, .0, .0, .0, .9, .0}};
float letter_sc[2][8] = {{.0, .0, .0, .0, .0, .0, .9, .0},
                         {.0, .0, .9, .0, .9, .9, .0, .0}};
float letter_em[1][8] = {{.0, .9, .9, .9, .9, .0, .9, .0}};
float letter_vert[1][8] = {{.0, .9, .9, .9, .9, .9, .9, .0}};
float letter_com[2][8] = {{.0, .0, .0, .0, .0, .0, .9, .0},
                          {.0, .0, .0, .0, .9, .9, .0, .0}};
float letter_minus[3][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                            {.0, .0, .0, .0, .9, .0, .0, .0},
                            {.0, .0, .0, .0, .9, .0, .0, .0}};
float letter_plus[3][8] = {{.0, .0, .0, .0, .9, .0, .0, .0},
                           {.0, .0, .0, .9, .9, .9, .0, .0},
                           {.0, .0, .0, .0, .9, .0, .0, .0}};

float letter_0[4][8] = {{.0, .0, .9, .9, .9, .9, .0, .0},
                        {.0, .9, .0, .0, .7, .0, .9, .0},
                        {.0, .9, .0, .7, .0, .0, .9, .0},
                        {.0, .0, .9, .9, .9, .9, .0, .0}};

float letter_1[3][8] = {{.0, .0, .9, .0, .0, .0, .9, .0},
                        {.0, .9, .9, .9, .9, .9, .9, .0},
                        {.0, .0, .0, .0, .0, .0, .9, .0}};

float letter_2[4][8] = {{.0, .0, .9, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .9, .9, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .0, .9, .9, .0, .0, .9, .0}};

float letter_3[4][8] = {{.0, .0, .9, .0, .0, .9, .0, .0},
                        {.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .9, .0, .9, .9, .0, .0}};

float letter_4[4][8] = {{.0, .0, .0, .0, .9, .9, .0, .0},
                        {.0, .0, .0, .9, .0, .9, .0, .0},
                        {.0, .0, .9, .0, .9, .9, .9, .0},
                        {.0, .9, .0, .0, .0, .9, .0, .0}};

float letter_5[4][8] = {{.0, .9, .9, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .9, .9, .0, .0}};


float letter_6[4][8] = {{.0, .0, .9, .9, .9, .9, .0, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .9, .0, .0, .9, .0, .9, .0},
                        {.0, .0, .9, .0, .0, .9, .0, .0}};

float letter_7[4][8] = {{.0, .9, .0, .0, .0, .0, .9, .0},
                        {.0, .9, .0, .0, .0, .9, .0, .0},
                        {.0, .9, .0, .0, .9, .0, .0, .0},
                        {.0, .9, .9, .9, .0, .0, .0, .0}};

float letter_8[4][8] = {{.0, .0, .9, .0, .9, .9, .0, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .9, .0, .9, .9, .0, .0}};

float letter_9[4][8] = {{.0, .0, .9, .0, .0, .9, .0, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .9, .0, .9, .0, .0, .9, .0},
                        {.0, .0, .9, .9, .9, .9, .0, .0}};

float letter_bo[2][8] = {{.0, .0, .9, .9, .9, .9, .0, .0},
                         {.0, .9, .0, .0, .0, .0, .9, .0}};
float letter_bc[2][8] = {{.0, .9, .0, .0, .0, .0, .9, .0},
                         {.0, .0, .9, .9, .9, .9, .0, .0}};


float letter_eq[3][8] = {{.0, .0, .0, .9, .0, .9, .0, .0},
                         {.0, .0, .0, .9, .0, .9, .0, .0},
                         {.0, .0, .0, .9, .0, .9, .0, .0}};

float letter_star[4][8] = {{.0, .0, .9, .1, .1, .9, .0, .0},
                           {.0, .0, .1, .5, .5, .1, .0, .0},
                           {.0, .0, .1, .5, .5, .1, .0, .0},
                           {.0, .0, .9, .1, .1, .9, .0, .0}};

float letter_hash[5][8] = {{.0, .0, .0, .9, .0, .9, .0, .0},
                           {.0, .0, .9, .9, .9, .9, .9, .0},
                           {.0, .0, .0, .9, .0, .9, .0, .0},
                           {.0, .0, .9, .9, .9, .9, .9, .0},
                           {.0, .0, .0, .9, .0, .9, .0, .0}};

float letter_us[3][8] = {{.0, .0, .0, .0, .0, .0, .9, .0},
                         {.0, .0, .0, .0, .0, .0, .9, .0},
                         {.0, .0, .0, .0, .0, .0, .9, .0}};

float letter_perc[5][8] = {{.0, .9, .9, .0, .0, .0, .9, .0},
                           {.0, .9, .9, .0, .0, .9, .0, .0},
                           {.0, .0, .0, .9, .9, .0, .0, .0},
                           {.0, .0, .9, .0, .0, .9, .9, .0},
                           {.0, .9, .0, .0, .0, .9, .9, .0}};

float letter_fs[3][8] = {{.0, .0, .0, .0, .1, .7, .9, .0},
                         {.0, .0, .1, .7, .7, .1, .0, .0},
                         {.0, .9, .7, .1, .0, .0, .0, .0}};

float letter_bs[3][8] = {{.0, .9, .7, .1, .0, .0, .0, .0},
                         {.0, .0, .1, .7, .7, .1, .0, .0},
                         {.0, .0, .0, .0, .1, .7, .9, .0}};


int letter(float dx, float dy, uint8_t* color, float f, String letter){
  float arr[5][8];
  int width = 0;
  if(letter == "A"){
    width = 5;
    arrcp(&letter_A[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Ä"){
    width = 5;
    arrcp(&letter_AE[0][0], &arr[0][0], width*8);
  }
  else if(letter == "B"){
    width = 4;
    arrcp(&letter_B[0][0], &arr[0][0], width*8);
  }
  else if(letter == "C"){
    width = 4;
    arrcp(&letter_C[0][0], &arr[0][0], width*8);
  }
  else if(letter == "D"){
    width = 4;
    arrcp(&letter_D[0][0], &arr[0][0], width*8);
  }
  else if(letter == "E"){
    width = 4;
    arrcp(&letter_E[0][0], &arr[0][0], width*8);
  }
  else if(letter == "F"){
    width = 4;
    arrcp(&letter_F[0][0], &arr[0][0], width*8);
  }
  else if(letter == "G"){
    width = 4;
    arrcp(&letter_G[0][0], &arr[0][0], width*8);
  }
  else if(letter == "H"){
    width = 4;
    arrcp(&letter_H[0][0], &arr[0][0], width*8);
  }
  else if(letter == "I"){
    width = 3;
    arrcp(&letter_I[0][0], &arr[0][0], width*8);
  }
  else if(letter == "J"){
    width = 4;
    arrcp(&letter_J[0][0], &arr[0][0], width*8);
  }
  else if(letter == "K"){
    width = 4;
    arrcp(&letter_K[0][0], &arr[0][0], width*8);
  }
  else if(letter == "L"){
    width = 4;
    arrcp(&letter_L[0][0], &arr[0][0], width*8);
  }
  else if(letter == "M"){
    width = 5;
    arrcp(&letter_M[0][0], &arr[0][0], width*8);
  }
  else if(letter == "N"){
    width = 4;
    arrcp(&letter_N[0][0], &arr[0][0], width*8);
  }
  else if(letter == "O"){
    width = 4;
    arrcp(&letter_O[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Ö"){
    width = 4;
    arrcp(&letter_OE[0][0], &arr[0][0], width*8);
  }
  else if(letter == "P"){
    width = 4;
    arrcp(&letter_P[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Q"){
    width = 4;
    arrcp(&letter_Q[0][0], &arr[0][0], width*8);
  }
  else if(letter == "R"){
    width = 4;
    arrcp(&letter_R[0][0], &arr[0][0], width*8);
  }
  else if(letter == "S"){
    width = 4;
    arrcp(&letter_S[0][0], &arr[0][0], width*8);
  }
  else if(letter == "T"){
    width = 5;
    arrcp(&letter_T[0][0], &arr[0][0], width*8);
  }
  else if(letter == "U"){
    width = 4;
    arrcp(&letter_U[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Ü"){
    width = 4;
    arrcp(&letter_UE[0][0], &arr[0][0], width*8);
  }
  else if(letter == "V"){
    width = 5;
    arrcp(&letter_V[0][0], &arr[0][0], width*8);
  }
  else if(letter == "W"){
    width = 5;
    arrcp(&letter_W[0][0], &arr[0][0], width*8);
  }
  else if(letter == "X"){
    width = 5;
    arrcp(&letter_X[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Y"){
    width = 5;
    arrcp(&letter_Y[0][0], &arr[0][0], width*8);
  }
  else if(letter == "Z"){
    width = 5;
    arrcp(&letter_Z[0][0], &arr[0][0], width*8);
  }
  else if(letter == "a"){
    width = 4;
    arrcp(&letter_a[0][0], &arr[0][0], width*8);
  }
  else if(letter == "ä"){
    width = 4;
    arrcp(&letter_ae[0][0], &arr[0][0], width*8);
  }
  else if(letter == "b"){
    width = 4;
    arrcp(&letter_b[0][0], &arr[0][0], width*8);
  }
  else if(letter == "c"){
    width = 4;
    arrcp(&letter_c[0][0], &arr[0][0], width*8);
  }
  else if(letter == "d"){
    width = 4;
    arrcp(&letter_d[0][0], &arr[0][0], width*8);
  }
  else if(letter == "e"){
    width = 4;
    arrcp(&letter_e[0][0], &arr[0][0], width*8);
  }
  else if(letter == "f"){
    width = 3;
    arrcp(&letter_f[0][0], &arr[0][0], width*8);
  }
  else if(letter == "g"){
    width = 4;
    arrcp(&letter_g[0][0], &arr[0][0], width*8);
  }
  else if(letter == "h"){
    width = 4;
    arrcp(&letter_h[0][0], &arr[0][0], width*8);
  }
  else if(letter == "i"){
    width = 1;
    arrcp(&letter_i[0][0], &arr[0][0], width*8);
  }
  else if(letter == "j"){
    width = 3;
    arrcp(&letter_j[0][0], &arr[0][0], width*8);
  }
  else if(letter == "k"){
    width = 3;
    arrcp(&letter_k[0][0], &arr[0][0], width*8);
  }
  else if(letter == "l"){
    width = 3;
    arrcp(&letter_l[0][0], &arr[0][0], width*8);
  }
  else if(letter == "m"){
    width = 5;
    arrcp(&letter_m[0][0], &arr[0][0], width*8);
  }
  else if(letter == "n"){
    width = 3;
    arrcp(&letter_n[0][0], &arr[0][0], width*8);
  }
  else if(letter == "o"){
    width = 3;
    arrcp(&letter_o[0][0], &arr[0][0], width*8);
  }
  else if(letter == "ö"){
    width = 3;
    arrcp(&letter_oe[0][0], &arr[0][0], width*8);
  }
  else if(letter == "p"){
    width = 3;
    arrcp(&letter_p[0][0], &arr[0][0], width*8);
  }
  else if(letter == "q"){
    width = 3;
    arrcp(&letter_q[0][0], &arr[0][0], width*8);
  }
  else if(letter == "r"){
    width = 3;
    arrcp(&letter_r[0][0], &arr[0][0], width*8);
  }
  else if(letter == "s"){
    width = 4;
    arrcp(&letter_s[0][0], &arr[0][0], width*8);
  }
  else if(letter == "t"){
    width = 3;
    arrcp(&letter_t[0][0], &arr[0][0], width*8);
  }
  else if(letter == "u"){
    width = 3;
    arrcp(&letter_u[0][0], &arr[0][0], width*8);
  }
  else if(letter == "ü"){
    width = 3;
    arrcp(&letter_ue[0][0], &arr[0][0], width*8);
  }
  else if(letter == "v"){
    width = 3;
    arrcp(&letter_v[0][0], &arr[0][0], width*8);
  }
  else if(letter == "w"){
    width = 5;
    arrcp(&letter_w[0][0], &arr[0][0], width*8);
  }
  else if(letter == "x"){
    width = 3;
    arrcp(&letter_x[0][0], &arr[0][0], width*8);
  }
  else if(letter == "y"){
    width = 3;
    arrcp(&letter_y[0][0], &arr[0][0], width*8);
  }
  else if(letter == "z"){
    width = 4;
    arrcp(&letter_z[0][0], &arr[0][0], width*8);
  }
  else if(letter == " "){
    width = 2;
    arrcp(&letter_space[0][0], &arr[0][0], width*8);
  }
  else if(letter == "?"){
    width = 4;
    arrcp(&letter_qm[0][0], &arr[0][0], width*8);
  }
  else if(letter == ":"){
    width = 1;
    arrcp(&letter_dc[0][0], &arr[0][0], width*8);
  }
  else if(letter == "."){
    width = 1;
    arrcp(&letter_dot[0][0], &arr[0][0], width*8);
  }
  else if(letter == ","){
    width = 2;
    arrcp(&letter_com[0][0], &arr[0][0], width*8);
  }
  else if(letter == ";"){
    width = 2;
    arrcp(&letter_sc[0][0], &arr[0][0], width*8);
  }
  else if(letter == "!"){
    width = 1;
    arrcp(&letter_em[0][0], &arr[0][0], width*8);
  }
  else if(letter == "-"){
    width = 3;
    arrcp(&letter_minus[0][0], &arr[0][0], width*8);
  }
  else if(letter == "+"){
    width = 3;
    arrcp(&letter_plus[0][0], &arr[0][0], width*8);
  }
  else if(letter == "0"){
    width = 4;
    arrcp(&letter_0[0][0], &arr[0][0], width*8);
  }
  else if(letter == "1"){
    width = 3;
    arrcp(&letter_1[0][0], &arr[0][0], width*8);
  }
  else if(letter == "2"){
    width = 4;
    arrcp(&letter_2[0][0], &arr[0][0], width*8);
  }
  else if(letter == "3"){
    width = 4;
    arrcp(&letter_3[0][0], &arr[0][0], width*8);
  }
  else if(letter == "4"){
    width = 4;
    arrcp(&letter_4[0][0], &arr[0][0], width*8);
  }
  else if(letter == "5"){
    width = 4;
    arrcp(&letter_5[0][0], &arr[0][0], width*8);
  }
  else if(letter == "6"){
    width = 4;
    arrcp(&letter_6[0][0], &arr[0][0], width*8);
  }
  else if(letter == "7"){
    width = 4;
    arrcp(&letter_7[0][0], &arr[0][0], width*8);
  }
  else if(letter == "8"){
    width = 4;
    arrcp(&letter_8[0][0], &arr[0][0], width*8);
  }
  else if(letter == "9"){
    width = 4;
    arrcp(&letter_9[0][0], &arr[0][0], width*8);
  }
  else if(letter == "("){
    width = 2;
    arrcp(&letter_bo[0][0], &arr[0][0], width*8);
  }
  else if(letter == ")"){
    width = 2;
    arrcp(&letter_bc[0][0], &arr[0][0], width*8);
  }
  else if(letter == "="){
    width = 3;
    arrcp(&letter_eq[0][0], &arr[0][0], width*8);
  }
  else if(letter == "*"){
    width = 4;
    arrcp(&letter_star[0][0], &arr[0][0], width*8);
  }
  else if(letter == "#"){
    width = 5;
    arrcp(&letter_hash[0][0], &arr[0][0], width*8);
  }
  else if(letter == "_"){
    width = 3;
    arrcp(&letter_us[0][0], &arr[0][0], width*8);
  }
  else if(letter == "%"){
    width = 5;
    arrcp(&letter_perc[0][0], &arr[0][0], width*8);
  }
  else if(letter == "/"){
    width = 3;
    arrcp(&letter_fs[0][0], &arr[0][0], width*8);
  }
  else if(letter == "\\"){
    width = 3;
    arrcp(&letter_bs[0][0], &arr[0][0], width*8);
  }
  else if(letter == "|"){
    width = 1;
    arrcp(&letter_vert[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tum1"){
    width = 5;
    arrcp(&tum1[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tum2"){
    width = 5;
    arrcp(&tum2[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tum3"){
    width = 5;
    arrcp(&tum3[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tum4"){
    width = 5;
    arrcp(&tum4[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tums1"){
    width = 5;
    arrcp(&tums1[0][0], &arr[0][0], width*8);
  }
  else if(letter == "tums2"){
    width = 5;
    arrcp(&tums2[0][0], &arr[0][0], width*8);
  }
  else{
    return 0;
  }
     
  float arr2[width+1][9];
  for(int y = 0; y < 9; y++){
    for(int x = 0; x < width+1; x++){
      arr2[x][y] = 0;
    }
  }
  
  int dxi = floor(dx);
  int dyi = floor(dy);
  float dxf = dx - (float)dxi;
  float dyf = dy - (float)dyi;
  float f00 = (1.0-dxf)*(1.0-dxf)*(1.0-dyf)*(1.0-dyf);
  float f10 = (1.0-dyf)*(1.0-dyf)*dxf*dxf;
  float f01 = (1.0-dxf)*(1.0-dxf)*dyf*dyf;
  float f11 = dxf*dxf*dyf*dyf;
  for(int x = 0; x < width; x++){
    for(int y = 0; y < 8; y++){
      if(arr[x][y] == 0) continue;
      arr2[x][y] += f00*(float)arr[x][y];
      arr2[x+1][y] += f10*(float)arr[x][y];
      arr2[x][y+1] += f01*(float)arr[x][y];
      arr2[x+1][y+1] += f11*(float)arr[x][y];
    }
  }
  for(int x = 0; x < width+1; x++){
    for(int y = 0; y < 8; y++){
      drawxy(x + dxi, y + dyi, color, arr2[x][y]*f, false);
    }
  }
  return width;
}

void rotateemoji(float* arr, uint8_t rotate){
  if(rotate == 0) return;
  float buff[8][8];
  for(uint8_t x = 0; x < 8; x++){
    for(uint8_t y = 0; y < 8; y++){
      buff[x][y] = 0.0;
    }
  }
  float fx = 1.0;
  float fy = 1.0;
  float corrx = -0.1;
  float corry = -0.1;
  // x-axis
  if(rotate & (uint8_t)1){
    fx = sin((float)t/1000*3.1416);
    if(fx > 0) corrx = 0.1;
  }
  // y-axis
  if(rotate & (uint8_t)2){
    fy = sin((float)t/1000*3.1416);
    if(fy > 0) corry = 0.1;
  }
  //Serial.println("sin: " + String(f));
  if(rotate & (uint8_t)2 || rotate & (uint8_t)1){
    for(uint8_t y = 0; y < 8; y++){
      for(uint8_t x = 0; x < 8; x++){
        float v[2] = {fx*((float)x - 3.5), fy*((float)y - 3.5)};
        put_anti_ali(3.5 + v[0] + corrx, 3.5 + v[1] + corry, arr[x + 8*y], &buff[0][0], false);
        //if(x == 0 && y == 0) Serial.println("v = (" + String(v[0]) + "," + String(v[1]) + ")");
      }
    }
  }
  if(rotate & (uint8_t)4){
    float s = sin((float)t/1000*3.1416*0.25);
    float c = cos((float)t/1000*3.1416*0.25);
    for(uint8_t y = 0; y < 8; y++){
      for(uint8_t x = 0; x < 8; x++){
        float v[2] = {c*((float)x - 3.5) - s*((float)y - 3.5), s*((float)x - 3.5) + c*((float)y - 3.5)};
        put_anti_ali(3.5 + v[0], 3.5 + v[1], arr[x + 8*y], &buff[0][0], true);
      }
    }
  }
  arrcp(&buff[0][0], arr, 64);
}

void put_anti_ali(float x, float y, float val, float* arr, bool quadratic){
  int nx = floor(x);
  int ny = floor(y);
  float fx = x - (float)nx;
  float fy = y - (float)ny;
  float f00, f01, f10, f11;
  f00 = (1.0-fx)*(1.0-fy);//*(1.0-fx)*(1.0-fy);
  f10 = (1.0-fy)*fx;//*(1.0-fy)*fx;
  f01 = (1.0-fx)*fy;//*(1.0-fx)*fy;
  f11 = fx*fx;//*fy*fy;
  if(quadratic){
    f00 *= f00;
    f10 *= f10;
    f01 *= f01;
    f11 *= f11;
  }
  uint8_t p1, p2, p3, p4;
  /*
  p1 = nx*8 + ny;
  p2 = (nx+1)*8 + ny;
  p3 = nx*8 + (ny+1);
  p4 = (nx+1)*8 + (ny+1);
  */
  
  p1 = nx + ny*8;
  p2 = nx+1 + ny*8;
  p3 = nx + (ny+1)*8;
  p4 = nx+1 + (ny+1)*8;

  if(p1 < 64 && p1 >= 0){
    arr[p1] += (1.0-arr[p1])*f00*val;
    arr[p1] = min(arr[p1], (float)1.0);
  }
  if(p2 < 64 && p2 >= 0) {
    arr[p2] += (1.0-arr[p2])*f10*val;
    arr[p2] = min(arr[p2], (float)1.0);
  }
  if(p3 < 64 && p3 >= 0){
    arr[p3] += (1.0-arr[p3])*f01*val;
    arr[p3] = min(arr[p3], (float)1.0);
  }
  if(p4 < 64 && p4 >= 0){
    arr[p4] += (1.0-arr[p4])*f11*val;
    arr[p4] = min(arr[p4], (float)1.0);
  }
}

int smiley(float dx, float dy, uint8_t* color, float f, String emoji, uint8_t* rotate){
  float arr[8][8];
  if(emoji == "smile") arrcp(&smile[0][0], &arr[0][0], 64);
  else if(emoji == "heart") arrcp(&heart[0][0], &arr[0][0], 64);
  else if(emoji == "thumb") arrcp(&thumb[0][0], &arr[0][0], 64);
  else if(emoji == "frown") arrcp(&frown[0][0], &arr[0][0], 64);
  else if(emoji == "finger") arrcp(&finger[0][0], &arr[0][0], 64);
  else if(emoji == "laugh") arrcp(&laugh[0][0], &arr[0][0], 64);
  else if(emoji == "pill") arrcp(&pill[0][0], &arr[0][0], 64);
  else if(emoji == "moonl") arrcp(&moonl[0][0], &arr[0][0], 64);
  else if(emoji == "moonr") arrcp(&moonr[0][0], &arr[0][0], 64);
  else if(emoji == "puke") arrcp(&puke[0][0], &arr[0][0], 64);
  else if(emoji == "left") arrcp(&left[0][0], &arr[0][0], 64);
  else if(emoji == "right") arrcp(&right[0][0], &arr[0][0], 64);
  else if(emoji == "up") arrcp(&up[0][0], &arr[0][0], 64);
  else if(emoji == "down") arrcp(&down[0][0], &arr[0][0], 64);
  else if(emoji == "RICH") arrcp(&RICH[0][0], &arr[0][0], 64);
  else return 0;
  
  rotateemoji(&arr[0][0], *rotate);
  float arr2[9][9];
  for(int y = 0; y < 9; y++){
    for(int x = 0; x < 9; x++){
      arr2[x][y] = 0;
    }
  }
  
  int dxi = floor(dx);
  int dyi = floor(dy);
  float dxf = dx - (float)dxi;
  float dyf = dy - (float)dyi;
  float f00 = (1.0-dxf)*(1.0-dxf)*(1.0-dyf)*(1.0-dyf);
  float f10 = (1.0-dyf)*(1.0-dyf)*dxf*dxf;
  float f01 = (1.0-dxf)*(1.0-dxf)*dyf*dyf;
  float f11 = dxf*dxf*dyf*dyf;
  for(int y = 0; y < 8; y++){
    for(int x = 0; x < 8; x++){
      arr2[x][y] += f00*(float)arr[x][y];
      arr2[x+1][y] += f10*(float)arr[x][y];
      arr2[x][y+1] += f01*(float)arr[x][y];
      arr2[x+1][y+1] += f11*(float)arr[x][y];
    }
  }
  for(int x = 0; x < 9; x++){
    for(int y = 0; y < 8; y++){
      drawxy(x + dxi, y + dyi, color, arr2[x][y]*f, false);
    }
  }
  *rotate = 0;
  return 8;
}

void arrcp(float* src, float* dst, int len){
  if(len <= 0) return;
  for(int k = 0; k < len; k++){
    dst[k] = src[k];
  }
}
